{"version":3,"sources":["components/Navbar Component/NavbarItem.js","components/Navbar Component/NavbarDropDown.js","components/Navbar Component/NavbarSearchBar.js","components/Navbar Component/NavbarSwitch.js","components/Navbar Component/Navbar.js","components/Text Form Component/TextForm.js","components/Alert Component/AlertComponent.js","App.js","reportWebVitals.js","index.js"],"names":["NavbarItem","props","React","createElement","className","href","link","text","NavbarDropDown","class","role","data-bs-toggle","aria-expanded","items","htmlEle","forEach","item","push","renderDropDownItems","NavBarSearchBar","type","placeholder","aria-label","NavbarSwitch","Fragment","id","onClick","toggleMode","concat","mode","htmlFor","Navbar","title","data-bs-target","aria-controls","renderNavbar","navbarProps","filter","navbarProp","arrayProps","element","TextForm","setText","useState","email","setEmail","style","color","label","rows","value","onChange","e","target","backgroundColor","setAlertMessage","bind","this","length","toUpperCase","toLowerCase","emailTemp","match","indexOf","newText","split","join","trim","map","emailsList","i","ele","AlertComponent","alert","message","App","navbarPropsData","setMode","setAlert","document","body","setTimeout","reportWebVitals","onPerfEntry","Function","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode","Router"],"mappings":"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","file":"static/js/main.0ff12823.chunk.js","sourcesContent":["import React from 'react'\n\nexport default function NavbarItem (props) {\n  return(\n    <li className=\"nav-item\">\n        <a className=\"nav-link\" href={props.link}>{props.text}</a>\n    </li>\n  );\n}\n","import React from 'react'\n\nexport default function NavbarDropDown(props){\n    return(\n        <li class=\"nav-item dropdown\">\n          <a class=\"nav-link dropdown-toggle\" href=\"#\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\n            {props.text}\n          </a>\n          <ul class=\"dropdown-menu\">\n            {renderDropDownItems(props.items)}\n          </ul>\n        </li>\n    );\n\n    function renderDropDownItems(items){\n        let htmlEle = []\n        props.items.forEach(item => {\n            htmlEle.push(<li><a className='dropdown-item' href={item.link}>{item.text}</a></li>);       \n        });\n        return htmlEle;\n    }\n}","import React from 'react'\n\nexport default function NavBarSearchBar(props){\n\n    return(\n        <form className=\"d-flex mx-3\" role=\"search\">\n            <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\n            <button className=\"btn btn-primary\" type=\"submit\">{props.text}</button>\n        </form>\n    );\n}","import React from 'react'\n\nexport default function NavbarSwitch(props) {\n  return (\n    <>\n      <div className=\"form-check form-switch\">\n        <input className=\"form-check-input\" type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\" onClick={props.toggleMode}></input>\n        <label className={`form-check-label ${props.mode === \"dark\" ? 'text-light' : ''}`} htmlFor=\"flexSwitchCheckDefault\">{props.text}</label>\n        </div>\n    </>\n  )\n}\n","import React from 'react'\nimport NavbarItem from './NavbarItem';\nimport NavbarDropDown from './NavbarDropDown';\nimport NavBarSearchBar from './NavbarSearchBar';\nimport NavbarSwitch from './NavbarSwitch';\n\nexport default function Navbar(props){\n\n    return(\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\n        <div className=\"container-fluid\"> \n          <a className=\"navbar-brand\" href=\"/\">{props.title}</a>\n          <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n            <span className=\"navbar-toggler-icon\"></span>\n          </button>\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\n              {renderNavbar(props.navbarProps.filter(navbarProp => navbarProp.type !== \"search\" && navbarProp.type !== \"switch\"))}\n            </ul>\n            {renderNavbar(props.navbarProps.filter(navbarProp => navbarProp.type === \"search\"))}\n            {renderNavbar(props.navbarProps.filter(navbarProp => navbarProp.type === \"switch\"))}\n          </div>\n        </div>\n      </nav>\n    );\n\n    function renderNavbar (arrayProps){\n      let htmlEle=[];\n      if(arrayProps){\n        arrayProps.forEach(element => {\n          if(element.type === \"link\"){\n            htmlEle.push(<NavbarItem text={element.text} link={element.link}/>);\n          }else if(element.type === \"dropdown\"){\n            htmlEle.push(<NavbarDropDown text={element.text} items={element.items}/>);\n          }else if(element.type === \"search\"){\n            htmlEle.push(<NavBarSearchBar text={element.text}/>) ; \n          }else if(element.type === \"switch\"){\n            htmlEle.push(<NavbarSwitch text={element.text} mode={props.mode} toggleMode={props.toggleMode}/>)\n          }\n        });\n\n      }\n      return htmlEle;\n    }\n\n}","import React, {useState} from 'react'\n\nexport default function TextForm(props) {\n  const [text, setText] = useState(\"\");\n  const [email, setEmail] = useState([]);\n  return (\n    <>  \n        <div className='container' style={{color: props.mode === 'dark' ? 'white' : 'black'}}>\n          <h2>{props.label}</h2>\n          <div className=\"mb-3\">\n              <textarea placeholder='Enter Text Here' className=\"form-control\" id=\"myBox\" rows=\"8\" value={text} onChange={ (e) => setText(e.target.value)} style={{backgroundColor: props.mode === 'dark' ? '#031a3b' : 'white', color: props.mode === 'dark' ? 'white' : 'black'}}></textarea>\n          </div>\n          <div className=\"d-sm-block\">\n              <button className=\"btn btn-primary \" onClick={clearTextClick.bind(this)}>Clear Text</button>\n              <button className=\"btn btn-primary mx-3 my-3\" onClick={toUpperCaseClick.bind(this)}>To Upper Case</button>\n              <button className=\"btn btn-primary\" onClick={toLowerCaseClick.bind(this)}>To Lower Case</button>\n              <button className=\"btn btn-primary mx-3\" onClick={extractEmailClick.bind(this)}>Extract Email ID's</button>\n              <button className=\"btn btn-primary my-3\" onClick={handleExtraSpaces.bind(this)}>Remove Extra Space</button>\n          </div>\n        </div>\n        <div className='container my-3' style={{color: props.mode === 'dark' ? 'white' : 'black'}}>\n          <h2>Your Text Summary</h2>\n          <p>{text.length && text.trim().split(\" \").length} word and {text.trim().length} characters</p>\n          {text && text.length &&\n            <>\n              <p>{text.trim().split(\" \").length * 0.008} Minutes to Read</p>\n              <h2>Preview</h2>\n              <p>{text}</p>\n              <h2>Emails in the above text</h2>\n              <ul>\n                {email && email.map((emailsList,i) => {\n                    return(\n                     emailsList && emailsList.map(ele => {\n                        return(\n                          <li>{ele}</li>\n                        )\n                      })\n                    )\n                })}\n              </ul>\n            </>\n          }\n        </div>\n    </>\n  )\n\n  function toUpperCaseClick(e){\n    if(text.length){\n      setText(text.toUpperCase())\n      props.setAlertMessage(\"Converted to Uppercase\",\"success\")\n    }else{\n      props.setAlertMessage(\"Please enter some text to convert to Uppercase\",\"danger\")\n    }\n  }\n\n  function toLowerCaseClick(e){\n    if(text.length){\n      setText(text.toLowerCase())\n      props.setAlertMessage(\"Converted to Lowercase\",\"success\")\n    }else{\n      props.setAlertMessage(\"Please enter some text to convert to Lowercase\",\"danger\")\n    }\n  }\n\n  function clearTextClick(e){\n    setText('');\n    setEmail([]);\n    props.setAlertMessage(\"Text Box cleared\",\"success\")\n  }\n\n  function extractEmailClick(){ \n    const emailText =  \n        /\\b[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Z|a-z]{2,}\\b/g; \n    let emailTemp = text.match(emailText);\n    if(email.indexOf(emailTemp) === -1){\n      setEmail([emailTemp]);\n    }\n    if(emailTemp){\n      props.setAlertMessage(\"Emails from the entered text have been extracted\",\"success\")\n    }else{\n      props.setAlertMessage(\"No Emails from the entered text have been extracted\",\"danger\")\n    }\n  } \n\n  function handleExtraSpaces(){\n    if(text.length){\n      let newText = text.split(/[ ]+/)\n      setText(newText.join(\" \"))\n      props.setAlertMessage(\"Extra Spaces Removed\",\"success\")\n    }else{\n      props.setAlertMessage(\"Please enter some text to remove spaces\",\"danger\")\n    }\n  }\n\n}\n","import React from 'react'\n\nexport default function AlertComponent(props) {\n  return (\n    props.alert && props.alert.message &&\n    <>\n         <div class={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\n            <strong>{props.alert.message}</strong>\n        </div>\n    </>\n  )\n}\n","import React, { useState }  from 'react';\nimport Navbar from \"./components/Navbar Component/Navbar\";\nimport TextForm from \"./components/Text Form Component/TextForm\";\nimport About from './components/About Component/About';\nimport navbarPropsData from './JsonConfigs/navbarJSONConfig.json';\nimport AlertComponent from './components/Alert Component/AlertComponent';\n/* import {\n  Routes,\n  Route\n} from \"react-router-dom\"; */\n\nfunction App() {\n\n  /*\n    Nav bar json\n    text -> Text to display for Navbar item\n    link -> Link to redirect on click of the item\n    type -> link -> single item\n            dropdown -> Sub Menu for an item\n            Search -> Search Bar  \n  */\n  let navbarProps = navbarPropsData\n\n  const [mode, setMode] = useState(\"light\");\n  const [alert, setAlert] = useState({});\n\n  return (\n   <>\n      <Navbar title=\"TextUtils\" navbarProps={navbarProps} toggleMode={toggleMode} mode={mode} setAlertMessage={setAlertMessage}/>\n      <AlertComponent alert={alert}/>\n\n{/*       <Routes>\n        <Route path='/' element={<TextForm label=\"Text Area\" mode={mode} setAlertMessage={setAlertMessage}/>}/>\n        <Route path='/about' element={<About mode={mode} setAlertMessage={setAlertMessage}/>}/>\n      </Routes> */}\n\n      <div className=\"container my-3\">\n        <TextForm label=\"Text Area\" mode={mode} setAlertMessage={setAlertMessage}/>\n      </div>\n      {/*<div className=\"container my-5\">\n      <About mode={mode} setAlertMessage={setAlertMessage}/>\n      </div>*/}\n      \n   </>\n  );\n\n  function toggleMode(){\n    if(mode === \"light\"){\n      setMode(\"dark\")\n      document.body.style.backgroundColor = \"#031a3b\"\n      setAlertMessage(\"Dark Mode Enabled Successfully\",\"success\")\n    }else{\n      setMode(\"light\")\n      document.body.style.backgroundColor = \"white\"\n      setAlertMessage(\"Light Mode Enabled Successfully\",\"success\")\n    }\n  }\n\n  function setAlertMessage(message, type){\n    setAlert({message:message, type:type})\n    setTimeout(()=>{\n      setAlert({})\n    },2000)\n  }\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter as Router} from 'react-router-dom';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}